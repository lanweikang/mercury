<div class="container">
    <form id="searchForm" class="form-horizontal">
      <div class="row">
        <div class="control-group span8">
          <label class="control-label">用户编号：</label>
          <div class="controls">
            <input id="userId" type="text" class="control-text" name="userId">
          </div>
        </div>
        <div class="control-group span8">
          <label class="control-label">用户姓名：</label>
          <div class="controls">
            <input id="userName" type="text" class="control-text" name="userName">
          </div>
        </div>
      </div>
      <div class="row">
        <div class="control-group span9">
          <label class="control-label">创建时间：</label>
          <div class="controls">
            <input id="startDate" type="text" class=" calendar" name="startDate"><span> - </span><input id="endDate" name="endDate" type="text" class=" calendar">
          </div>
        </div>
        <div class="span3 offset2">
          <button type="button" id="btnSearch" class="button button-primary">搜索</button>
        </div>
      </div>
    </form>
	<div class="search-grid-container">
	  <div id="grid"></div>
	</div>
 <div id="addContent" class="hide">
    <form id="J_Form" class="form-horizontal">
        <div class="row">
            <div class="control-group span8">
                <label class="control-label"><s>*</s>用户名</label>
                <div class="controls">
                    <input name="userName" data-rules="{required:true}" type="text" data-rules="{required:false}" class="input-normal control-text">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="control-group span8">
                <label class="control-label"><s>*</s>密码</label>
                <div class="controls">
                    <input name="password0" data-rules="{required:true}" type="password" data-rules="{required:false}" class="input-normal control-text">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="control-group span8">
                <label class="control-label"><s>*</s>确认密码</label>
                <div class="controls">
                    <input name="password" data-rules="{required:true}" type="password" data-rules="{required:false}" class="input-normal control-text">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="control-group span8">
                <label class="control-label"><s>*</s>用户角色</label>
                <div class="controls">
                    <select data-rules="{required:true}" name="roleId" class="input-normal">
                        <option value="">请选择</option>
                        #foreach($!role in $!roleList)
                       		<option value="$!role.roleId">$!role.roleName</option>
                        #end
                    </select>
                </div>
            </div>
        </div>
    </form>
</div>
</div>
$control.setTemplate("commonjs.vm")
<script type="text/javascript">
  BUI.use(['common/search','common/page'],function (Search) {
   	  editing = new BUI.Grid.Plugins.DialogEditing({
        contentId : 'addContent', //设置隐藏的Dialog内容
        autoSave : true, //添加数据或者修改数据时，自动保存
        triggerCls : 'btn-add',
         editor : {
            success : function(){ //点击确认的时候触发，可以进行异步提交
                var editor = this,
                        record = editing.get('record'), // 获取编辑的记录
                        data = editor.getValue(); //编辑完成的记录
                editor.valid();
                if(editor.isValid()){
                    addUser(BUI.mix(record,data),editor,search);
                }
                /*var form = $('#J_Form'); //也可以直接使用表单同步提交的方式
                form.submit();
                */
            }
        }
      }),
      columns = [
          {title:'用户编号',dataIndex:'userId',width:80,renderer:function(v){
            return Search.createLink({
              id : 'userId',
              title : '用户信息',
              text : v,
              href : '/user/userDetail.htm?userId=' + v
            });
          }},
          {title:'用户名',dataIndex:'userName',width:80},
          {title:'创建时间',dataIndex:'createDate',width:130,renderer:BUI.Grid.Format.datetimeRenderer},
          {title:'操作',dataIndex:'userName',width:200,renderer : function(value){
            var editStr =  Search.createLink({ //链接使用 此方式
                id : 'edit' + value,
                title : '编辑用户信息',
                text : '编辑',
                href : '/user/userEdit.htm?userName=' + value
              }),
              delStr = '<span class="grid-command btn-del" title="删除学生信息">删除</span>';//页面操作不需要使用Search.createLink
            return editStr + delStr;
          }}
        ],
      store = Search.createStore('/user/userList/search.do'),
      gridCfg = Search.createGridCfg(columns,{
        tbar : {
          items : [
           	{text : '<i class="icon-plus"></i>添加用户',btnCls : 'button button-small btn-add',handler : addFunction},
            {text : '<i class="icon-remove"></i>删除',btnCls : 'button button-small',handler : delFunction}
          ]
        },
        plugins : [editing,BUI.Grid.Plugins.CheckSelection,BUI.Grid.Plugins.AutoFit] // 插件形式引入多选表格
      });
 
    var  search = new Search({
        store : store,
        gridCfg : gridCfg
      }),
      grid = search.get('grid');
      
    // 添加操作
    function addFunction(){
      var newData = {isNew : true}; //标志是新增加的记录
      editing.add(newData,'name'); //添加记录后，直接编辑
    }
    
    // 添加用户
    function addUser(record,editor,search){
    	if(record.userName.length > 6){
    		alert("用户名太长了");
    	}else if(record.password != record.password0){
    		alert("两次输入的密码不一致");
    	}else{
	    	$.ajax({
	            url:'/user/userList/addUser.do',
	            type:'post',
	            dataType:'json',
	            cache:false,
	            async:false,
	            data:record,
	            success:function(data){
	                if(data.success){
	                    editor.close();
	                    search.load();
	                }else{
	                    alert(data.error);
	                }
	            },
	            error:function (XMLHttpRequest,textStatus){
					if(XMLHttpRequest.status==200 && textStatus == "parsererror"){
						 alert("对不起，您无此操作权限");
					}
		 		}
       		 });
        }
    }
     
    //删除操作
    function delFunction(){
      var selections = grid.getSelection();
      delItems(selections);
    }
 
    function delItems(items){
      var ids = [];
      BUI.each(items,function(item){
        ids.push(item.userId);
      });
 
      if(ids.length){
        BUI.Message.Confirm('确认要删除选中的记录么？',function(){
          $.ajax({
            url : '/user/userList/delUser.do',
            dataType : 'json',
            data : {'ids' : ids.toString()},
            success : function(data){
              if(data.success){ //删除成功
                search.load();
              }else{ //删除失败
                BUI.Message.Alert('删除失败！');
              }
            },
            error:function (XMLHttpRequest,textStatus){
				if(XMLHttpRequest.status==200 && textStatus == "parsererror"){
					 alert("对不起，您无此操作权限");
				}
		 	}
        });
        },'question');
      }
    }
 
    //监听事件，删除一条记录
    grid.on('cellclick',function(ev){
      var sender = $(ev.domTarget); //点击的Dom
      if(sender.hasClass('btn-del')){
        var record = ev.record;
        delItems([record]);
      }else if(sender.hasClass("btn-add")){
        var record = ev.record;
        getAddOtherItems(record,sender);
      }
    });
  });
</script>